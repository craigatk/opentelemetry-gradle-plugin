buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
    }
}

plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "1.7.10"
    id "org.jlleitschuh.gradle.ktlint" version "11.6.1"
    id "dev.projektor.publish" version "8.7.0"
    id 'com.gradle.plugin-publish' version "1.2.1"
    id "com.atkinsondev.opentelemetry-build" version "1.6.1"
}

group = "com.atkinsondev"
version = "1.7.1"

gradlePlugin {
    website = 'https://github.com/craigatk/opentelemetry-gradle-plugin'
    vcsUrl = 'https://github.com/craigatk/opentelemetry-gradle-plugin'
    plugins {
        opentelemetryPlugin {
            id = 'com.atkinsondev.opentelemetry-build'
            implementationClass = 'com.atkinsondev.opentelemetry.build.OpenTelemetryBuildPlugin'
            displayName = 'OpenTelemetry build plugin'
            description = 'Instrument your Gradle build with OpenTelemetry observability to find and eliminate build bottlenecks'
            tags.addAll(['observability', 'opentelemetry', 'telemetry'])
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("io.opentelemetry:opentelemetry-api:$otelVersion")
    implementation("io.opentelemetry:opentelemetry-sdk:$otelVersion")
    implementation("io.opentelemetry:opentelemetry-exporter-otlp:$otelVersion")
    implementation("io.opentelemetry:opentelemetry-exporter-zipkin:$otelVersion")
    implementation("io.opentelemetry:opentelemetry-semconv:$otelVersion-alpha")

    testImplementation gradleTestKit()

    testImplementation(platform("org.junit:junit-bom:5.10.1"))
    testImplementation("org.junit.jupiter:junit-jupiter")

    testImplementation "org.wiremock:wiremock:3.3.1"

    testImplementation("io.strikt:strikt-core:0.34.1")

    testImplementation 'org.awaitility:awaitility-kotlin:4.2.0'
}

test {
    useJUnitPlatform()
}

ktlint {
    disabledRules = ["no-wildcard-imports"]
}

projektor {
    serverUrl = "https://projektorlive.herokuapp.com"
    publishToken = System.getenv("PROJEKTOR_TOKEN") ?: project.findProperty('projektor_publish_token') ?: null
}

openTelemetryBuild {
    endpoint = "https://api.honeycomb.io"
    headers = [
            "x-honeycomb-team": System.getenv("HONEYCOMB_API_KEY") ?: project.findProperty('honeycomb_api_key') ?: null,
            "x-honeycomb-dataset": "otel-gradle"
    ]
}
